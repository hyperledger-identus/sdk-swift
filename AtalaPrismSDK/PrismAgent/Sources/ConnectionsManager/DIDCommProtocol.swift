import Domain
import Foundation

/**
 A protocol representing a connection for exchanging messages using the DIDComm protocol.

 The DIDCommConnection protocol defines methods for awaiting and sending messages using the DIDComm protocol.

 - Note: The DIDCommConnection protocol is designed to facilitate communication between agents using the DIDComm protocol.

 */
public protocol DIDCommConnection {

    /**
     Awaits messages from the connection.

     - Returns: An array of messages received from the connection.

     - Throws: An error if there was a problem receiving messages from the connection.

     */
    func awaitMessages() async throws -> [Message]

    /**
     Awaits a response to a specified message ID from the connection.

     - Parameter id: The ID of the message for which to await a response.

     - Returns: The response message, if one is received.

     - Throws: An error if there was a problem receiving a response from the connection.

     */
    func awaitMessageResponse(id: String) async throws -> Message?

    /**
     Sends a message over the connection.

     - Parameter message: The message to send.

     - Returns: The response message, if one is received.

     - Throws: An error if there was a problem sending or receiving the message.

     - Note: The @discardableResult attribute is used to suppress the warning generated by unused return values when this method is called.

     */
    @discardableResult
    func sendMessage(_ message: Message) async throws -> Message?

}

protocol ConnectionsManager {
    func addConnection(_ paired: DIDPair) async throws
    func removeConnection(_ pair: DIDPair) async throws -> DIDPair?
}
