//
// Json.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

/// The service endpoint. Can contain multiple possible values as described in the [Create DID operation] 
public enum Json: Codable {
    case typeArr(Arr)
    case typeModelBool(ModelBool)
    case typeNum(Num)
    case typeStr(Str)
    case type[String: Any]([String: Any])

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeArr(let value):
            try container.encode(value)
        case .typeModelBool(let value):
            try container.encode(value)
        case .typeNum(let value):
            try container.encode(value)
        case .typeStr(let value):
            try container.encode(value)
        case .type[String: Any](let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(Arr.self) {
            self = .typeArr(value)
        } else if let value = try? container.decode(ModelBool.self) {
            self = .typeModelBool(value)
        } else if let value = try? container.decode(Num.self) {
            self = .typeNum(value)
        } else if let value = try? container.decode(Str.self) {
            self = .typeStr(value)
        } else if let value = try? container.decode([String: Any].self) {
            self = .type[String: Any](value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of Json"))
        }
    }
}
